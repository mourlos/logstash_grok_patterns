##This configuration file contains patterns that will help in parsing logs
##generated by VMware and nsx firewall
##The patterns are quite generic now but will be midified as soon as we have
##a more accurate sample of logs

## This is a generic pattern and is being used by all logs
GENERAL <%{INT}>%{INT} %{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:hostname} %{GREEDYDATA} BST  %{DATA:event_classification} %{DATA:x1} %{DATA:x2}

## Specific pattern tied with system events
TWO - \[SystemEvent\] %{GREEDYDATA}, Severity:'%{DATA:severity}', Event Source:'%{DATA:event_source}', Code:'%{DATA:code}', Event Message:'%{GREEDYDATA:event_message}', Module:'%{DATA:module}', Universal Object:'%{DATA:false}'

## Other generic pattern to match mosyt of events
THREE - %{GREEDYDATA:syslog_message}

##This sequence is userd on the filter. It will be later changed to match more patterns (if any)
#%{GENERAL} %{TWO}|%{GENERAL} %{THREE}

##This patternts are used to identify the syslog program on Vmware generated logs
PROG_1  %{TIMESTAMP_ISO8601} %{IPORHOST} %{GREEDYDATA:sys_program}
PROG_2 %{INT} %{DATA} %{IPORHOST} %{DATA:sys_program}\[\]

##Patterns based on different sys_program values
###******vmkernel******
VMKERNEL_1 %{DATA:cpu}:%{DATA:cpu_id}ScsiDeviceIO: %{DATA:scsi_device_io}: Cmd(%{DATA:cmd}) 0x89, CmdSN 0x3091b94 from world 66526 to dev "naa.60080e50004725bc0000017a59814dde" failed %{DATA:failed} Valid sense data: %{DATA:valid sense data}.

VMKERNEL_2 %{DATA:cpu}:%{DATA:cpu_id}nmp_ThrottleLogForDevice:%{DATA:nmp_throttle}: Cmd(%{DATA:cmd})to dev "naa.60080e50004725bc0000017a59814dde" on path "%{DATA:path}" Failed: %{DATA:failed} Valid sense data: %{DATA:valid sense data} Act:%{DATA:act}

VMKERNEL_3 %{DATA:cpu}:%{DATA:cpu_id}zdriver: %{DATA:zdriver and errorcode}:  \#2- %{DATA:reason} status=%{GREEDYDATA:status}

VMKERNEL_3 %{DATA:cpu}:%{DATA:cpu_id}zdriver: %{DATA:zdriver and errorcode}:  \#1- %{GREEDYDATA:reason}

##%{VMKERNEL_1}|%{VMKERNEL_2}|%{VMKERNEL_3}

###******vmauthd******
VMAUTHD_1 Msg_SetLocaleEx: HostLocale=%{DATA:host_locale} UserLocale=%{DATA:user_locale}
VMAUTHD_2 received CONNECT command: %{DATA:command}
VMAUTHD_3 %{DATA:state} from %{IP:dst_ip} as %{DATA:user}
VMAUTHD_4 %{DATA:dir}: protocol list %{GREEDYDATA:protocol}
VMAUTHD_5 DictionaryLoad: %{DATA:error} "%{DATA:dir}": %{DATA:reason}
VMAUTHD_6 %{DATA:action} lock for %{DATA:dir}
VMAUTHD_7 %{DATA:state} PROXY command for %{DATA:device}, session = %{GREEDYDATA:session}

##%{VMAUTHD_1}|%{VMAUTHD_2}|%{VMAUTHD_3}|%{VMAUTHD_4}|%{VMAUTHD_5}|%{VMAUTHD_6}|

#****cron*****
CROND %{DATA:syslog_program}: USER %{DATA:user} pid %{DATA:pid} cmd %{DATA:cmd} \+\+group=%{GREEDYDATA:dir}

##*****FDM*****
FDM_1 %{DATA:level} %{DATA:app_name}\[%{DATA:id}\] \[Originator@%{DATA:originator} sub=%{DATA:sub} opID=%{DATA:op_id}\] \[%{GREEDYDATA:info}\] hostId=%{DATA:host} state=%{DATA:state} master=%{DATA:master} isolated=%{DATA:isolated} host-list-version=%{DATA:host_list_version} config-version=%{DATA:config_version} vm-metadata-version=%{DATA:metadata_version} slv-mst-tdiff-sec=%{GREEDYDATA:slv_mst_tdiff_sec}

FDM_2 %{DATA:level} %{DATA:app_name}\[%{DATA:id}\] \[Originator@%{DATA:originator} sub=%{DATA:sub} opID=%{DATA:op_id}\] \[%{GREEDYDATA:info}\] vm %{DATA:location} from %{DATA:from} %{GREEDYDATA:other_info}

FDM_3 %{DATA:level} %{DATA:app_name}\[%{DATA:id}\] \[Originator@%{DATA:originator} sub=%{DATA:sub} opID=%{DATA:op_id}\] \[%{GREEDYDATA:info}\] %{GREEDYDATA:other_info}

FDM_4 %{DATA:level} %{DATA:app_name}\[%{DATA:id}\] \[Originator@%{DATA:originator} sub=%{DATA:sub} opID=%{DATA:op_id}\] %{DATA:state} \(%{DATA:location}\).

##%{FDM_1}|%{FDM_2}|%{FDM_3}|%{FDM_4}|
#*****smartd*****
SMARTD_1 %{DATA:app}: %{DATA:io} %{DATA} ret:%{DATA:ret} status:%{DATA:status} host_status:%{DATA:host_status} driver_status:%{GREEDYDATA:driver_status}
SMARTD_2 %{DATA:app}: %{DATA:info} device:%{GREEDYDATA:device}
SMARTD_3 %{DATA:app}: plugin %{DATA:plugin} %{GREEDYDATA:state}

#%{SMARTD_1}|{SMARTD_2}|{SMARTD_3}

#*****dfwpktlogs*****
DFWPKTLOGS %{INT:filter_hash} %{DATA:af_value} %{DATA:reason} %{DATA:action} %{DATA:rule_set_id} %{DATA:direction} %{DATA:packet_length} %{DATA:protocol} %{IPORHOST:src_ip}/%{INT:src_port}->%{IPORHOST:dst_ip}/%{INT:dst_port} %{WORD:tcp_flags}
